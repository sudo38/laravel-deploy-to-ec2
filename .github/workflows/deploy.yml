name: Deploy Laravel to EC2

on:
  push:
    branches:
      - main

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}

jobs:
  deploy:
    name: Deploy Job
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    # ----- Terraform Steps -----
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      run: terraform init
      working-directory: terraform

    - name: Terraform Plan
      run: terraform plan -out=tfplan
      working-directory: terraform

    - name: Terraform Apply (with SG check)
      run: |
        terraform state list || true
        if terraform state list | grep aws_security_group.allow_http_ssh; then
          echo "Security Group already managed by Terraform."
        else
          terraform apply -auto-approve tfplan
        fi
      working-directory: terraform

    - name: Get EC2 public IP from Terraform output
      id: tf-output
      run: |
        echo "EC2_IP=$(terraform output -raw instance_ip)" >> $GITHUB_ENV
      working-directory: terraform

    # ----- SSH Key Setup -----
    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/key.pem
        chmod 400 ~/.ssh/key.pem

    - name: Overview .ssh folder
      run: ls -la ~/.ssh

    # ----- Ansible Inventory -----
    - name: Create Ansible inventory file
      run: |
        echo "[web]" > inventory.ini
        echo "${{ env.EC2_IP }}" >> inventory.ini
        echo "" >> inventory.ini
        echo "[web:vars]" >> inventory.ini
        echo "ansible_user=${{ vars.EC2_USER }}" >> inventory.ini
        echo "ansible_ssh_private_key_file=~/.ssh/key.pem" >> inventory.ini

    - name: Add EC2 host to known_hosts
      run: ssh-keyscan -H ${{ env.EC2_IP }} >> ~/.ssh/known_hosts

    # ----- Run Ansible -----
    - name: Run Ansible Playbook
      run: ansible-playbook -i inventory.ini ansible/main.yml
